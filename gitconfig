[color]
  status = auto
  branch = auto
[core]
  excludesfile = ~/.gitignore
	autocrlf = input
	safecrlf = false
[status]
	submoduleSummary = true
[diff]
  compactionHeuristic = true
[push]
  default = simple
[pull]
	rebase = preserve
[commit]
	gpgsign = true
[branch]
	autosetupmerge = always
[alias]
  # Basic Shortcuts
  # ---------------
  st = status -sb                                                                   # Smarter status - include tag and branch info
  cp = cherry-pick
  cl = clone
  co = checkout
  cob = checkout -b
  br = branch
  a = add
  aa = add --all
  A = add -A
  au = add -u
  mr = merge --no-edit

  # Reset Helpers
  # -------------
  r = reset
  unstage = reset HEAD
  uncommit = reset --soft HEAD~1
  undo = checkout HEAD -- 
  undoall = checkout -f
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

  # Commit Shortcuts
  # ---------------
  c = commit
  cs = commit -S
  cr = commit -eF .git/COMMIT_EDITMSG                                               # If commit fails either due to a failed gpg or whatever, use the last message written when commiting again

  # Diff Shortcuts
  # ---------------
  diff = diff --word-diff
  d = diff --word-diff
  dc = diff --cached
  ds = diff --staged                                                                # git ds - Diff your staged changes == review before committing.

  # Stash Shortcuts
  # ---------------
  s = stash
  sl = stash list
  sa = stash apply
  sp = stash pop
  ss = stash save

  # Log Shortcuts
  # ---------------
  l = log --show-signature
  ls = log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short                       #  Pretty one-line log with tags, branches and authors
  lsv = log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short --numstat            #  A verbose ls, shows changed files too
  sig = log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short --show-signature -1  #  Check for GPG signatures
  lh = log --graph
  la = !git lh --date-order --all 2> /dev/null
  lb = log --graph --simplify-by-decoration
  lba = !git lb --all
  fup = log --since '1 day ago' --oneline "--author=$(git config --get user.email)" # Know what you did yesterday

	# External Commands
	# -----------------
	ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"              # Generate a .gitignore based on given arguments ( For list of arguments do: gi list )
	                                                                                  # e.g.: git ignore osx, php, node, wordpress >> .gitignore
  fix = "!$EDITOR `git diff --name-only | uniq`"                                    # Open all conflicted files in the default editor
  user = "!bash -c -l \"gituser $1\""                                               # Set the user profile to be used when commiting by using the gituser function defined in ~/.profile
  session = "!git diff --name-only -z | xargs -0 bash -c '</dev/tty open \"$@\"' x" # Open all modified tracked files within the current repo
  cpc = "!git log -1 --pretty=%B | pbcopy"                                          # Copy last commit message to clipboard
