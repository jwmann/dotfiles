# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Load pyenv before pyenv plugin is loaded
# src: https://github.com/pyenv/pyenv/issues/2041#issuecomment-990253001
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="$PYENV_ROOT/shims:$PATH"
eval "$(pyenv init --path)"

# Add avr-gcc@8 to path for qmk
export PATH="/opt/homebrew/opt/avr-gcc@8/bin:$PATH"

# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm#lazy-startup
# zstyle ':omz:plugins:nvm' lazy yes
zstyle ':omz:plugins:nvm' autoload yes
zstyle ':omz:plugins:nvm' silent-autoload yes # optionally remove the output generated by NVM when autoloading

zmodload zsh/complist

plugins=(aliases macos z wd zsh-interactive-cd safe-paste rsync urltools tmux git gitignore vscode nvm npm yarn pyenv docker docker-compose dotenv wp-cli gh perms thefuck)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='mvim -v'
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias gcsnv="git commit -S --no-verify" # Commit with signing, without pre-commit hook
alias 'gcs!'="git commit -S --verbose --amend" # Re-commit last commit, with signing and verbose
alias gpnv="git push --no-verify" # Push without pre-push hook
alias gpt="git push --tags" # Push all tags
alias gls="git log --all --oneline --date=format:%Y-%m-%d --pretty=format:\"%C(yellow)%h %C(blue)%cd%Creset%C(auto)%d%  %s\""
alias glsa="git log --all --oneline --date=format:%Y-%m-%d --pretty=format:\"%C(yellow)%h %C(blue)%cd %C(green)[%cn]%Creset%C(auto)%d%  %s\""
alias gmd="git merge $1 && git branch -d $1; #" # Merge with specified branch, delete specified branch
alias gmD="git merge $1 && git branch -D $1; #" # Merge with specified branch, force delete specified branch
alias gmdp="git merge @{-1} && git branch -d @{-1}; #" # Merge with previous branch, delete previous branch
alias gmDp="git merge @{-1} && git branch -D @{-1}; #" # Merge with previous branch, force delete previous branch
alias gcmp="git checkout - && git merge @{-1}; #" # Checkout previous branch and merge with it
alias gcmdp="git checkout - && git merge @{-1} && git branch -d @{-1}; #" # Checkout previous branch and merge with it, delete previous branch
alias gcmDp="git checkout - && git merge @{-1} && git branch -D @{-1}; #" # Checkout previous branch and merge with it, force delete previous branch
alias gu="git checkout HEAD --" # Discard/Undo local changes to a file
alias gua="git checkout -f" # Discard/Undo all local changes in working directory
alias gstm="git stash push -m" # Stash with message
alias gtsf="git tag -s -f" # Create or update signed tag
alias gtd="git tag -d" # Delete tag locally
alias gtdp="git tag -d $1 && git push --delete origin $1" # Delete tag locally and remotely
alias gtdd="git tag -d $(git describe --tags --abbrev=0)" # Delete current tag locally
alias gtddp="git tag -d $(git describe --tags --abbrev=0) && git push --delete origin" # Delete current tag locally and remotely

# Set ZSH in Vim Insert Mode
bindkey -A viins main
export KEYTIMEOUT=1

bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

autoload -Uz select-bracketed select-quoted
zle -N select-quoted
zle -N select-bracketed
for km in viopp visual; do
  bindkey -M $km -- '-' vi-up-line-or-history
  for c in {a,i}${(s..)^:-\'\"\`\|,./:;=+@}; do
    bindkey -M $km $c select-quoted
  done
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $km $c select-bracketed
  done
done

autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -M vicmd cs change-surround
bindkey -M vicmd ds delete-surround
bindkey -M vicmd ys add-surround
bindkey -M visual S add-surround

bindkey -M vicmd "H" vi-first-non-blank
bindkey -M vicmd "L" vi-end-of-line

bindkey -M viins "^_" history-incremental-pattern-search-backward
bindkey -M vicmd "^_" history-incremental-pattern-search-backward

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
